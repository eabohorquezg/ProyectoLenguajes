package View;

import Model.CodeAnalyzer;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author Edwin 
 */

public class GUICodeAnalyzer extends javax.swing.JFrame {

    DefaultListModel listmodel;    
    /**
     * Creates new form GUICodeAnalyzer
     */
    
    public GUICodeAnalyzer() {        
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Detector");
        codeArea.setEnabled(true);
        listmodel = new DefaultListModel();
        resultList.setModel(listmodel);
    }
               
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        lineCounter = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        codeArea = new javax.swing.JTextArea();
        btnUploadFile = new javax.swing.JButton();
        btnCodeAnalyzer = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        resultList = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Detector de vulnerabilidades de seguridad en codigo Java");

        jLabel2.setText("Resultados");

        lineCounter.setEditable(false);
        lineCounter.setColumns(2);
        lineCounter.setLineWrap(true);
        lineCounter.setRows(2);
        lineCounter.setTabSize(2);
        lineCounter.setText("  1");
        lineCounter.setAutoscrolls(false);
        lineCounter.setCaretColor(new java.awt.Color(51, 51, 255));
        lineCounter.setFocusable(false);

        codeArea.setColumns(20);
        codeArea.setLineWrap(true);
        codeArea.setRows(5);
        codeArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codeAreaKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(codeArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lineCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE)
            .addComponent(lineCounter)
        );

        jScrollPane3.setViewportView(jPanel1);

        btnUploadFile.setText("Cargar Archivo");
        btnUploadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadFileActionPerformed(evt);
            }
        });

        btnCodeAnalyzer.setText("Analizar Codigo");
        btnCodeAnalyzer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCodeAnalyzerActionPerformed(evt);
            }
        });

        resultList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resultListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(resultList);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCodeAnalyzer, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 770, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(204, 204, 204))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUploadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCodeAnalyzer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void countRows(){
        int totalrows=codeArea.getLineCount();
        lineCounter.setText("1\n");
        for(int i=2; i<=totalrows;i++){
            lineCounter.setText(lineCounter.getText()+i+"\n");
        }
    }
    
    private void codeAreaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeAreaKeyReleased
        // TODO add your handling code here:
        if(evt.isControlDown()/* || evt.getKeyCode()==10 || evt.getKeyCode()==8 || evt.getKeyCode()==127*/){
            countRows(); 
        }
    }//GEN-LAST:event_codeAreaKeyReleased
    
    
    private void btnUploadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadFileActionPerformed
        JFileChooser fc = new JFileChooser();
        fc.setFileFilter(new FileNameExtensionFilter("*.java","java"));        
        int respuesta = fc.showOpenDialog(this);        
        String path = "";
        if (respuesta == JFileChooser.APPROVE_OPTION) {
            path = fc.getSelectedFile().toString();
            try {                 
                DataInputStream in = new DataInputStream(new FileInputStream(path));
                String text = "";                
                while (in.available() != 0) {
                    text += in.readLine() + "\n";                    
                }
                codeArea.setText(text);
                in.close();                
                countRows();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this,"File input error");
            }
        }        
    }//GEN-LAST:event_btnUploadFileActionPerformed
    
    public void showResultList() throws FileNotFoundException, IOException{                
        FileReader fr = new FileReader(new File ("SecurityFailures.txt"));        
        BufferedReader br = new BufferedReader(fr);
        String line;
        while((line=br.readLine())!=null){
            listmodel.addElement(line);
        }        
    }
    
    private void btnCodeAnalyzerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCodeAnalyzerActionPerformed
        listmodel.removeAllElements();
        try {                           
            BufferedWriter bw = new BufferedWriter(new FileWriter("input.txt"));            
            bw.write(codeArea.getText());
            bw.close();            
            CodeAnalyzer.processCode();
            showResultList();
        }catch (Exception ex) {
            Logger.getLogger(GUICodeAnalyzer.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_btnCodeAnalyzerActionPerformed

    private void resultListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resultListMouseClicked
        // TODO add your handling code here:
        String text = resultList.getSelectedValue();
        if( text.contains("<") ){
            int line = Integer.parseInt(text.substring(1, text.indexOf(":")));                     
            try {
               codeArea.getHighlighter().removeAllHighlights();
               lineCounter.getHighlighter().removeAllHighlights();
               int startIndex = codeArea.getLineStartOffset(line-1);               
               int endIndex = codeArea.getLineEndOffset(line-1);
               int startIndex2 = lineCounter.getLineStartOffset(line-1);               
               int endIndex2 = lineCounter.getLineEndOffset(line-1);
               Highlighter.HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.YELLOW);                    
               codeArea.getHighlighter().addHighlight(startIndex, endIndex, painter);
               lineCounter.getHighlighter().addHighlight(startIndex2, endIndex2, painter);
            }catch (BadLocationException ex) {
               Logger.getLogger(GUICodeAnalyzer.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        
    }//GEN-LAST:event_resultListMouseClicked
           
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUICodeAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUICodeAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUICodeAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUICodeAnalyzer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //GUICodeAnalyzer gui = new GUICodeAnalyzer();
//        //gui.show();
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        /* Create and display the form */
//        
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                GUICodeAnalyzer o = new GUICodeAnalyzer();
//                o.show();
//                //new GUICodeAnalyzer().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCodeAnalyzer;
    private javax.swing.JButton btnUploadFile;
    private static javax.swing.JTextArea codeArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea lineCounter;
    private javax.swing.JList<String> resultList;
    // End of variables declaration//GEN-END:variables
}
